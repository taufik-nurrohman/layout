$alert-color: inherit !default;
$alert-fill: #ffc !default;
$button-color--focus: #fff !default;
$button-color: #fff !default;
$button-fill--focus: #00f !default;
$button-fill: #000 !default;
$button-stroke--focus: #000 !default;
$button-stroke: #000 !default;
$caption-color: #555 !default;
$code-color: inherit !default;
$code-fill: #eee !default;
$color: #000 !default;
$fill: #fff !default;
$input-color--focus: inherit !default;
$input-color: inherit !default;
$input-fill: #fff !default;
$input-stroke--focus: #00f !default;
$input-stroke: #000 !default;
$link-color--focus: #f00 !default;
$link-color: #00f !default;
$mark-color: inherit !default;
$mark-fill: #ff0 !default;
$note-color: inherit !default;
$note-fill: #fed !default;
$quote-color: inherit !default;
$quote-stroke: #eee !default;
$rule-stroke: #eee !default;
$status-color: #888 !default;
$stroke: #000 !default;
$table-header-fill: #eee !default;

*,
::after,
::before {
  background: 0 0;
  border: 0;
  box-sizing: border-box;
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  text-align: inherit;
  text-decoration: none;
  word-wrap: break-word;
}

::-moz-focus-inner {
  border: 0;
  margin: 0;
  outline: 0;
  padding: 0;
}

:where(
  address,
  article,
  aside,
  blockquote,
  dd,
  details,
  div,
  dl,
  dt,
  fieldset,
  figure,
  footer,
  form,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  header,
  hgroup,
  hr,
  main,
  nav,
  ol,
  p,
  pre,
  search,
  section,
  table,
  ul
) {
  & + & {
    margin-top: 1.5rem;
  }
}

li {
  &:where(:not(:first-child)) {
    > :where(
      address,
      article,
      aside,
      blockquote,
      dd,
      details,
      div,
      dl,
      dt,
      fieldset,
      figure,
      footer,
      form,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      header,
      hgroup,
      hr,
      main,
      nav,
      p,
      pre,
      search,
      section,
      table
    ):where(:first-child) {
      margin-top: 1.5rem;
    }
  }
}

:root {
  background: $fill;
  border: 0 solid $stroke;
  border-width: 5px 0 0;
  @if $color != inherit {
    color: $color;
  }
  font: normal normal 16px/1.5 serif;
  padding: 1.5rem;
  text-align: left;
}

%a {
  @if $link-color != inherit {
    color: $link-color;
  }
  &:focus {
    @if $link-color--focus != $link-color {
      color: $link-color--focus;
    }
  }
}

%b {
  font-weight: bold;
}

%i {
  font-style: italic;
}

%input {
  accent-color: $button-fill;
  background: $input-fill;
  border: 2px solid $input-stroke;
  @if $input-color != inherit {
    color: $input-color;
  }
  display: inline-block;
  height: 2.25rem;
  line-height: calc(2.25rem - 4px); /* Minus the `border-width` */
  outline: 0;
  padding: 0 0.5rem;
  position: relative;
  vertical-align: middle;
  width: 18.5rem;
  &:focus {
    @if $input-stroke--focus != $input-stroke {
      border-color: $input-stroke--focus;
    }
    @if $input-color--focus != $input-color {
      color: $input-color--focus;
    }
  }
}

%label {
  cursor: pointer;
  user-select: none;
}

%q {
  @if $quote-color != inherit {
    color: $quote-color;
  }
}

%s {
  text-decoration: line-through;
}

%small {
  font-size: 0.8em;
}

%u {
  text-decoration: underline;
}

a {
  @extend %a;
}

abbr {
  cursor: help;
}

b,
kbd,
legend,
strong,
th {
  @extend %b;
}

blockquote {
  @extend %q;
  border: {
    inline-start: 5px solid $quote-stroke;
  }
  font-size: 1.185rem;
  padding: {
    inline-start: 1.5rem;
  }
}

caption,
figcaption {
  @if $caption-color != inherit {
    color: $caption-color;
  }
  margin: 1rem 0 0;
  text-align: center;
}

code {
  background: $code-fill;
  @if $code-color != inherit {
    color: $code-color;
  }
  display: inline-block;
  font-family: monospace;
  font-size: 0.8em;
  padding: 0 0.35em;
}

del,
s {
  @extend %s;
}

details {
  > summary {
    @extend %a, %label;
  }
  &[open] {
    > summary {
      margin-bottom: 1.5rem;
    }
  }
}

dfn,
em,
i,
var {
  @extend %i;
}

dl {
  margin: {
    left: 1.5rem;
    right: 1.5rem;
  }
}

dt {
  @extend h6;
}

ol,
ul {
  margin: {
    left: 2rem;
  }
  & & {
    margin-left: 1.5rem;
  }
}

fieldset {
  border: 1px solid;
  padding: 1.5rem;
}

figure {
  text-align: center;
  img {
    border: 1px solid;
    display: block;
    margin: {
      left: auto;
      right: auto;
    }
  }
}


/* <https://www.modularscale.com/?16&px&1.25> */

h1,
h2,
h3,
h4,
h5,
h6 {
  @extend %b;
  line-height: 1.25;
}

h1 {
  font-size: 3.815em;
}

h2 {
  font-size: 3.052em;
}

h3 {
  font-size: 2.441em;
}

h4 {
  font-size: 1.953em;
}

h5 {
  font-size: 1.563em;
}

h6 {
  font-size: 1.25em;
}


hgroup {
  > p {
    @if $caption-color != inherit {
      color: $caption-color;
    }
    font-size: 1.563em;
  }
}

hr {
  border-top: 2px dashed $rule-stroke;
}

img {
  max-width: 100%;
  height: auto;
}

ins,
u {
  @extend %u;
}

label {
  @extend %label;
  align-items: center;
  display: inline-flex;
  gap: 0.5em;
  vertical-align: middle;
}

legend {
  @if $caption-color != inherit {
    color: $caption-color;
  }
  padding: 0 0.5rem;
}

mark {
  background: $mark-fill;
  @if $mark-color != inherit {
    color: $mark-color;
  }
}

nav {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  a {
    display: block;
    padding: 0 0.5rem;
  }
  > ul {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }
}

ol {
  list-style: decimal;
}

pre {
  code {
    display: block;
    overflow: auto;
    padding: 0.75rem 1rem;
    white-space: pre-wrap;
  }
}

q {
  @extend %q;
}

small,
sub,
sup {
  @extend %small;
}

sub, sup {
  line-height: 0;
}

sub {
  vertical-align: sub;
}

sup {
  vertical-align: super;
}

svg {
  display: inline-block;
  fill: currentColor;
  height: 1.5rem;
  vertical-align: middle;
  width: 1.5rem;
}

table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  caption {
    caption-side: bottom;
  }
  th,
  td {
    border: 1px solid;
    padding: 0.5rem 0.65rem;
    vertical-align: top;
  }
  th {
    background: $table-header-fill;
  }
}

ul {
  list-style: disc;
}

audio,
iframe,
picture,
video {
  @if $color != inherit {
    background: $color;
  }
  display: block;
  height: auto;
  width: 100%;
}

button,
input,
output,
select,
textarea {
  @extend %input;
}

button {
  @extend %label;
  background: $button-fill;
  border-color: $button-stroke;
  @if $button-color != inherit {
    color: $button-color;
  }
  padding: {
    left: 0.65rem;
    right: 0.65rem;
  }
  text-align: center;
  width: auto;
  &:focus {
    @if $button-fill--focus != $button-fill {
      background: $button-fill--focus;
    }
    // @if $button-stroke--focus != $button-stroke {
      border-color: $button-stroke--focus;
    // }
    // @if $button-color--focus != $button-color {
      color: $button-color--focus;
    // }
  }
  &[role='link'] {
    background: 0 0;
    border-color: transparent;
    @if $link-color != inherit {
      color: $link-color;
    }
    &:focus {
      background: 0 0;
      @if $link-color != inherit {
        border-color: $link-color;
        color: $link-color;
      }
    }
  }
}

input {
  &[type='button'],
  &[type='reset'],
  &[type='submit'] {
    @extend button;
  }
  &[type='image'],
  &[type='range'] {
    background: 0 0;
    border: 0;
  }
  &[type='checkbox'],
  &[type='color'],
  &[type='file'],
  &[type='image'],
  &[type='radio'],
  &[type='range'] {
    @extend %label;
  }
  &[type='checkbox'],
  &[type='radio'] {
    -webkit-appearance: none;
    appearance: none;
    height: 1.5rem;
    padding: 0;
    width: 1.5rem;
    &:not(:checked) {
      &::after {
        visibility: hidden;
      }
    }
  }
  &[type='checkbox'] {
    &::after {
      border: 0 solid $button-fill;
      border-width: 0 2px 2px 0;
      bottom: 4px;
      content: "";
      left: 9px;
      position: absolute;
      right: 5px;
      top: 3px;
      transform: rotate(45deg) translate(-2px, 1px);
    }
    &:focus {
      &::after {
        @if $button-fill--focus != $button-fill {
          border-color: $button-fill--focus;
        }
      }
    }
  }
  &[type='radio'] {
    border-radius: 100%;
    &::after {
      background: $button-fill;
      border-radius: 100%;
      bottom: 4px;
      content: "";
      left: 4px;
      position: absolute;
      right: 4px;
      top: 4px;
    }
    &:focus {
      &::after {
        @if $button-fill--focus != $button-fill {
          background: $button-fill--focus;
        }
      }
    }
  }
  &[type='color'] {
    height: 2.25rem;
    padding: 4px;
    width: 2.25rem;
  }
  &[type='file'] {
    padding: {
      inline-start: 0;
    }
    &::file-selector-button {
      background: $button-fill;
      border: 0 solid $input-stroke;
      border-inline-end-width: 2px;
      box-sizing: border-box;
      @if $button-color != inherit {
        color: $button-color;
      }
      font: inherit;
      margin: 0;
      margin: {
        inline-end: 0.5rem;
      }
      padding: 0;
      padding: {
        left: 0.65rem;
        right: 0.65rem;
      }
      text-align: center;
      width: auto;
      &:focus {
        @if $button-fill--focus != $button-fill {
          background: $button-fill--focus;
        }
        // @if $button-color--focus != $button-color {
          color: $button-color--focus;
        // }
      }
    }
    &:focus {
      &::file-selector-button {
        @if $button-fill--focus != $button-fill {
          background: $button-fill--focus;
        }
        // @if $input-stroke--focus != $input-stroke {
          border-color: $input-stroke--focus;
        // }
        // @if $button-color--focus != $button-color {
          color: $button-color--focus;
        // }
      }
    }
  }
  &[type='image'] {
    height: auto;
    padding: 0;
    width: auto;
  }
  &[type='range'] {
    -webkit-appearance: none;
    appearance: none;
    padding: {
      left: 0;
      right: 0;
    }
    &::-webkit-slider-runnable-track {
      -webkit-appearance: none;
      background: $input-stroke;
      border: 0;
      height: 2px;
      overflow: visible;
    }
    &::-webkit-slider-thumb {
      -webkit-appearance: none;
      background: $button-fill;
      border-radius: 0;
      border: 2px solid $button-stroke;
      height: calc(1.5rem + 2px);
      margin-top: -0.75rem;
      width: 0.5rem;
    }
    &::-moz-range-track {
      background: $input-stroke;
      border: 0;
      height: 2px;
    }
    &::-moz-range-thumb {
      background: $button-fill;
      border-radius: 0;
      border: 2px solid $button-stroke;
      height: calc(1.5rem + 2px);
      margin-top: -0.75rem;
      width: 0.5rem;
    }
    &:focus {
      &::-webkit-slider-runnable-track {
        @if $input-stroke--focus != $input-stroke {
          background: $input-stroke--focus;
        }
      }
      &::-webkit-slider-thumb {
        @if $button-fill--focus != $button-fill {
          background: $button-fill--focus;
        }
        @if $button-stroke--focus != $button-stroke {
          border-color: $button-stroke--focus;
        }
      }
      &::-moz-range-track {
        @if $input-stroke--focus != $input-stroke {
          background: $input-stroke--focus;
        }
      }
      &::-moz-range-thumb {
        @if $button-fill--focus != $button-fill {
          background: $button-fill--focus;
        }
        @if $button-stroke--focus != $button-stroke {
          border-color: $button-stroke--focus;
        }
      }
    }
  }
}

// `<input id="radio" type="radio"> <label for="radio">Radio</label>`
input[id] {
  + label[for] {
    margin-left: 0.5em;
  }
}

select {
  @extend %label;
  -webkit-appearance: none;
  appearance: none;
  &[multiple] {
    height: auto;
    line-height: 1;
    padding: {
      bottom: 0.45rem;
      top: 0.45rem;
    }
  }
}

@each $v in (-moz-color-swatch, -webkit-color-swatch) {
  ::#{$v} {
    border: 0;
  }
}

::-webkit-color-swatch-wrapper {
  padding: 0;
}

textarea {
  font-family: monospace;
  height: auto;
  line-height: inherit;
  min-height: 9.25rem;
  padding: {
    bottom: 0.25rem;
    top: 0.25rem;
  }
  resize: vertical;
}

:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

[aria-current],
[aria-disabled] {
  color: inherit;
  &:focus {
    color: inherit;
  }
}

[role='alert'] {
  background: $alert-fill;
  @if $alert-color != inherit {
    color: $alert-color;
  }
  padding: 0.75rem 1rem;
}

[role='button'] {
  @extend button;
  &:not(:any-link) {
    @extend :disabled;
  }
}

[role='deletion'] {
  @extend del;
}

[role='group'] {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: center;
  &[aria-orientation='vertical'] {
    flex-direction: column;
  }
}

[role='insertion'] {
  @extend ins;
}

[role='link'] {
  @extend a;
  cursor: pointer;
}

[role='mark'] {
  @extend mark;
}

[role='note'] {
  @extend [role='alert'];
  background: $note-fill;
  @if $note-color != inherit {
    color: $note-color;
  }
}

[role='status'] {
  @if $status-color != inherit {
    color: $status-color;
  }
}

@media (max-width: 700px) {
  :root {
    font-size: 14px;
  }
}